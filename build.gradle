buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group
archivesBaseName = mod_name + "-" + minecraft_version

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    mappings = mappings_version
    runDir = "run"

    replaceIn("WorldGuard.java")
    replace "@VERSION@", project.version

    clientJvmArgs += "-Dfml.coreMods.load=${mod_core_plugin}"
    serverJvmArgs += "-Dfml.coreMods.load=${mod_core_plugin}"
    clientRunArgs += "--mixin ${mod_mixin_configs}"
    serverRunArgs += "--mixin ${mod_mixin_configs}"
}

repositories {
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {

    provided('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {

    from configurations.provided.asFileTree.files.collect {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
        zipTree(it)
    }

    manifest {
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "FMLCorePlugin": mod_core_plugin
    }

}

mixin {
    add sourceSets.main, "mixins.simpleworldguard.refmap.json"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}